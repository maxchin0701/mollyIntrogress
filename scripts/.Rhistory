totalDepth <- as.numeric(strsplit(allDepths[j,i],split=",")[[1]][1]) +
as.numeric(strsplit(allDepths[j,i],split=",")[[1]][2])
refFreq[[index]] <- refDepth/totalDepth
samps[[index]] <- curSamp
index <- index+1
}
}
allFreqs <- cbind(allDepths[,c(9,10)],
do.call(rbind,refFreq),
do.call(rbind,samps))
colnames(allFreqs)[c(3,4)] <- c("freq","sample")
allFreqs$pos <- as.numeric(allFreqs$pos)
allFreqs <- subset(allFreqs,freq!=0 & freq!=1)
#### LOOP THROUGH SCAFFOLDS AND PLOT####
#get list of scaffolds
introgressScaffs <- levels(factor(allFreqs$scaff))
for(i in 1:length(introgressScaffs)){
#determine start and end points
introgressRegionsDf <- data.frame()
for(j in 1:length(introgressRegionsAll)){
introgressRegionsDf <- rbind(introgressRegionsDf,introgressRegionsAll[[j]])
}
introgressRegionsDf <- subset(introgressRegionsDf,scaff==introgressScaffs[i])
posMin <- min(as.numeric(introgressRegionsDf$start))
posMax <- max(as.numeric(introgressRegionsDf$end))
#subset allele frequencies
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
curScaffPlot <- ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
#save plot
ggsave(curScaffPlot,
filename = paste0("../figures/alleleBias/",
tolower(ploidy),"/",
introgressScaffs[i],
".pdf"),
width = 7.47,
height = 4.90,
units = "in")
}
introgressScaffs
i=5
introgressRegionsDf <- data.frame()
for(j in 1:length(introgressRegionsAll)){
introgressRegionsDf <- rbind(introgressRegionsDf,introgressRegionsAll[[j]])
}
introgressRegionsDf <- subset(introgressRegionsDf,scaff==introgressScaffs[i])
posMin <- min(as.numeric(introgressRegionsDf$start))
posMax <- max(as.numeric(introgressRegionsDf$end))
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
View(subsetFreqs)
ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
posMin=1
posMax=100000
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
posMin = 100001
posMax=500000
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
posMax = 750000
posMin = 500000
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
subset(subsetFreqs,sample="Amm105")
View(allFreqs)
View(allDepths)
View(allFreqs)
View(introgressRegionsAll)
introgressRegionsAll[["Amm087"]][["scaff"]]
introgressRegionsAll[["Amm087"]]
posMin <- 270001
posMax <- 1125946
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
#### PACKAGES ####
library(vcfR)
library(ggplot2)
#### LOAD IN DATA ####
#sprcify variable or fixed ploidy analysis
ploidy <- "Var"
#variants
dat <-  read.vcfR(paste0("../outputs/variantCalls/allIntrogress",ploidy,"Filt.vcf.gz"))
#introgressed regions
load(paste0("../outputs/gcnv/introgressList",ploidy,".RData"))
#### EXTRACT ALLELE DEPTH ####
allDepths <- extract.gt(dat,element="AD")
#add columns to SNP depth df
scaffPos <- strsplit(rownames(allDepths),"_")
allDepths <- as.data.frame(allDepths)
scaffNames <- list()
posNames <- list()
#fill lists
for(i in 1:nrow(allDepths)){
scaffNames[[i]] <- paste(scaffPos[[i]][1],scaffPos[[i]][2],sep="_")
posNames[[i]] <- scaffPos[[i]][3]
}
#bind to df
allDepths <- cbind(allDepths,
do.call(rbind,scaffNames),
do.call(rbind,posNames))
colnames(allDepths)[c(9,10)] <- c("scaff","pos")
rownames(allDepths) <- NULL
#### GET REF ALLELE FREQUENCY ####
refFreq <- vector("list",2000000)
samps <- vector("list",2000000)
index <- 1
for(i in 1:8){
curSamp <- colnames(allDepths)[i]
for(j in 1:nrow(allDepths)){
refDepth <- as.numeric(strsplit(allDepths[j,i],split=",")[[1]][1])
totalDepth <- as.numeric(strsplit(allDepths[j,i],split=",")[[1]][1]) +
as.numeric(strsplit(allDepths[j,i],split=",")[[1]][2])
refFreq[[index]] <- refDepth/totalDepth
samps[[index]] <- curSamp
index <- index+1
}
}
allFreqs <- cbind(allDepths[,c(9,10)],
do.call(rbind,refFreq),
do.call(rbind,samps))
colnames(allFreqs)[c(3,4)] <- c("freq","sample")
allFreqs$pos <- as.numeric(allFreqs$pos)
allFreqs <- subset(allFreqs,freq!=0 & freq!=1)
#### LOOP THROUGH SCAFFOLDS AND PLOT####
#get list of scaffolds
introgressScaffs <- levels(factor(allFreqs$scaff))
for(i in 1:length(introgressScaffs)){
#determine start and end points
introgressRegionsDf <- data.frame()
for(j in 1:length(introgressRegionsAll)){
introgressRegionsDf <- rbind(introgressRegionsDf,introgressRegionsAll[[j]])
}
introgressRegionsDf <- subset(introgressRegionsDf,scaff==introgressScaffs[i])
posMin <- min(as.numeric(introgressRegionsDf$start))
posMax <- max(as.numeric(introgressRegionsDf$end))
#subset allele frequencies
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
curScaffPlot <- ggplot(data=subsetFreqs,aes(x=freq))+
geom_density(mapping=aes(fill=subsetFreqs$sample),alpha=0.4)+
scale_fill_viridis_d()+
labs(fill=paste0(introgressScaffs[i],"\n",posMin," - ",posMax))+
ylab("Density")+
xlab("Reference allele frequency")+
xlim(0,1)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background= element_blank(),
axis.line = element_line(colour = "black"),
axis.text.y = element_text(size = 10),
axis.title = element_text(face = "bold",
size = 10),
legend.title = element_text(face = "bold",
size = 10),
legend.key=element_blank(),
plot.title = element_text(face = "bold",
size = 17,
hjust=0.5))
#save plot
ggsave(curScaffPlot,
filename = paste0("../figures/alleleBias/",
tolower(ploidy),"/",
introgressScaffs[i],
".pdf"),
width = 7.47,
height = 4.90,
units = "in")
}
#packages
library(coda)
#simulate freqeuncies
props <- c()
sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
refDepth <- sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
samp==0
samp <- sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
length(samp==0)
length(which(samp==0))
samp <- sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
length(which(samp==0))
#run simulation
for(i in 1:1000000){
samp <- sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
refDepth <- length(which(samp==0))/length(samp)
props[i] <- refDepth
}
#run simulation
for(i in 1:1000000){
samp <- sample(c(0,1),30,replace=T,prob=c(0.5,0.5))
refDepth <- length(which(samp==0))/length(samp)
props[i] <- refDepth
}
dens(props)
plot(density(props))
hist(props)
HPDinterval(as.mcmc(props))
#### PACKAGES ####
library(vcfR)
library(ggplot2)
#### LOAD IN DATA ####
#sprcify variable or fixed ploidy analysis
ploidy <- "Var"
#variants
dat <-  read.vcfR(paste0("../outputs/variantCalls/allIntrogress",ploidy,"Filt.vcf.gz"))
#introgressed regions
load(paste0("../outputs/gcnv/introgressList",ploidy,".RData"))
#### EXTRACT ALLELE DEPTH ####
allDepths <- extract.gt(dat,element="AD")
#add columns to SNP depth df
scaffPos <- strsplit(rownames(allDepths),"_")
allDepths <- as.data.frame(allDepths)
scaffNames <- list()
posNames <- list()
#fill lists
for(i in 1:nrow(allDepths)){
scaffNames[[i]] <- paste(scaffPos[[i]][1],scaffPos[[i]][2],sep="_")
posNames[[i]] <- scaffPos[[i]][3]
}
#bind to df
allDepths <- cbind(allDepths,
do.call(rbind,scaffNames),
do.call(rbind,posNames))
colnames(allDepths)[c(9,10)] <- c("scaff","pos")
rownames(allDepths) <- NULL
#### GET REF ALLELE FREQUENCY ####
refFreq <- vector("list",2000000)
samps <- vector("list",2000000)
index <- 1
for(i in 1:8){
curSamp <- colnames(allDepths)[i]
for(j in 1:nrow(allDepths)){
refDepth <- as.numeric(strsplit(allDepths[j,i],split=",")[[1]][1])
totalDepth <- as.numeric(strsplit(allDepths[j,i],split=",")[[1]][1]) +
as.numeric(strsplit(allDepths[j,i],split=",")[[1]][2])
refFreq[[index]] <- refDepth/totalDepth
samps[[index]] <- curSamp
index <- index+1
}
}
allFreqs <- cbind(allDepths[,c(9,10)],
do.call(rbind,refFreq),
do.call(rbind,samps))
colnames(allFreqs)[c(3,4)] <- c("freq","sample")
allFreqs$pos <- as.numeric(allFreqs$pos)
allFreqs <- subset(allFreqs,freq!=0 & freq!=1)
#### LOOP THROUGH SCAFFOLDS AND PLOT####
#get list of scaffolds
introgressScaffs <- levels(factor(allFreqs$scaff))
i=1
#determine start and end points
introgressRegionsDf <- data.frame()
for(j in 1:length(introgressRegionsAll)){
introgressRegionsDf <- rbind(introgressRegionsDf,introgressRegionsAll[[j]])
}
introgressRegionsDf <- subset(introgressRegionsDf,scaff==introgressScaffs[i])
posMin <- min(as.numeric(introgressRegionsDf$start))
posMax <- max(as.numeric(introgressRegionsDf$end))
#subset allele frequencies
subsetFreqs <- subset(allFreqs,scaff==introgressScaffs[i] &
pos >= posMin &
pos <= posMax)
View(subsetFreqs)
AmmSNPs <- subset(subsetFreqs,sample=="Amm087" | sample="Amm090")
AmmSNPs <- subset(subsetFreqs,sample=="Amm087" | sample=="Amm090")
View(AmmSNPs)
HPDinterval(as.mcmc(props))
bounds <- HPDinterval(as.mcmc(props))[1]
bounds
bounds <- HPDinterval(as.mcmc(props))
bounds
AmmSNPs$freq <= bounds[1]
AmmSNPs$freq <= bounds[1] || AmmSNPs$freq >= bounds[2]
AmmSNPs$freq <= bounds[1] | AmmSNPs$freq >= bounds[2]
AmmSNPs$freq >= bounds[2]
bounds[2]
test <- AmmSNPs$freq <= bounds[1] | AmmSNPs$freq >= bounds[2]
plot(test)
summary(test)
test
plot(density(AmmSNPs$freq))
bounds
?HPDinterval
bounds <- HPDinterval(as.mcmc(props),prob=0.99)
bounds
bounds <- HPDinterval(as.mcmc(props),prob=0.8)
bounds
#packages
library(coda)
#simulate freqeuncies
props <- c()
#run simulation
for(i in 1:1000000){
samp <- sample(c(0,1),10,replace=T,prob=c(0.5,0.5))
refDepth <- length(which(samp==0))/length(samp)
props[i] <- refDepth
}
hist(props)
bounds <- HPDinterval(as.mcmc(props))
bounds
#### Q1 ####
A <- rbind(c(0,0,2,3),
c(0.06,0,0,0),
c(0,0.7,0,0),
c(0,0,0.8,0.8))
xNought <- c(0,0,0,100)
#### PBG 231 HW4 ####
#### Q1 ####
#popmatrix and vecto
mat <- rbind(c(0,0,2,3),
c(0.06,0,0,0),
c(0,0.7,0,0),
c(0,0,0.8,0.8))
xNought <- c(0,0,0,100)
x <- xNought <- c(0,0,0,100)
#project 10 gens
for(i in 1:10){
x <- mat %*% x
}
x
#### Q1B ####
eigen(mat)
mat
#### Q1B ####
matEigen <- eigen(mat)
lambda <- Re(matEigen$values[1])
lambda
tmatEigen <- eigen(t(mat))
tmatEigen
u <- Re(matEigen$vectors[1])
u
u <- Re(matEigen$vectors[,1])
u
rm(u)
Re(matEigen$vectors[,1])/sum(matEigen$vectors[,1])
v <- Re(matEigen$vectors[,1])/sum(matEigen$vectors[,1])
v
v <- Re(matEigen$vectors[,1])/sum(Re(matEigen$vectors[,1]))
v
w <- Re(tmatEigen$vectors[,1])/sum(Re(tmatEigen$vectors[,1]))
w
Re(tmatEigen$vectors[,1])/(v * Re(tmatEigen$vectors[,1]))
Re(tmatEigen$vectors[,1])/sum((v * Re(tmatEigen$vectors[,1])))
v * Re(tmatEigen$vectors[,1])
sum((v * Re(tmatEigen$vectors[,1])))
Re(tmatEigen$vectors[,1])
Re(tmatEigen$vectors[,1])/sum((v * Re(tmatEigen$vectors[,1])))
w %*% c(0,0,0,100)
w
w <- Re(tmatEigen$vectors[,1])/sum((v * Re(tmatEigen$vectors[,1])))
w
w %*% c(0,0,0,100)
(w %*% c(0,0,0,100)) * (0.937^10) * v
eigen(rbind(c(0.225,0.15),c(0.025,1.35)))
eigen(rbind(c(0.225,0.15),c(0.025,1.35)))->matEigen
v <- Re(matEigen$vectors[,1])/sum(Re(matEigen$vectors[,1]))
v
eigen(rbind(c(4.95,0.05),c(0.05,4.95)))->matEigen
matEigen
#### PACKAGES ####
library(ggplot2)
#### LOAD LIST OF INTRGORESSED REGIONS ####
ploidy <- "var"
load(paste0("../outputs/gcnv/introgressList",ploidy,".RData"))
#### SET INTERVAL SIZE  AND FIX/VARIABLE PLOIDY####
intervalSize <- "1kb"
#### READ IN INTERVALS ####
#change this depending on if youre looking at 1kb vs 10kb intervals
intervals <- read.delim(paste0("../data/refGenome/PFo",intervalSize,".bed"),
sep="\t",row.names = NULL,header = F)
colnames(intervals) <- c("scaff","start","end")
intervals$scaff <- as.factor(intervals$scaff)
#### COLLECT SAMPLE NAMES ####
samps <- names(introgressRegionsAll)
sampIndices <- c(0,1,2,3,5,8,9,10)
#### GET LIST OF ALL SCAFFOLDS THAT HAVE BEEN INTROGRESSED ####
introgressScaffs <- c()
#use for loop to gather scaffold names
for(i in 1:length(introgressRegionsAll)){
introgressScaffs <- c(introgressScaffs, introgressRegionsAll[[i]]$scaff)
}
#keep only those that are unique
introgressScaffs <- unique(introgressScaffs)
View(intervals)
View(introgressRegionsAll)
introgressRegionsAll[["Amm105"]][["scaff"]]
introgressRegionsAll[["Amm105"]]
